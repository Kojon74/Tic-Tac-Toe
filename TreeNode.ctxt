#BlueJ class context
comment0.params=
comment0.target=TreeNode()
comment0.text=\n\ The\ constructor\ for\ objects\ of\ class\ Node.\n
comment1.params=root\ numOfChildren
comment1.target=TreeNode\ tree(TreeNode,\ int)
comment1.text=\n\ Uses\ recursion\ to\ create\ tree.\n
comment10.params=parent
comment10.target=void\ setParent(TreeNode)
comment11.params=
comment11.target=TreeNode[]\ getChildren()
comment12.params=children
comment12.target=void\ setChildren(TreeNode[])
comment13.params=
comment13.target=char[]\ getValue()
comment14.params=value
comment14.target=void\ setValue(char[])
comment15.params=
comment15.target=int\ getPositionOfLastMove()
comment16.params=positionOfLastMove
comment16.target=void\ setPositionOfLastMove(int)
comment17.params=
comment17.target=char\ getPieceOfLastMove()
comment18.params=pieceOfLastMove
comment18.target=void\ setPieceOfLastMove(char)
comment19.params=
comment19.target=char[]\ getValueOfParent()
comment2.params=
comment2.target=TreeNode\ addChild()
comment20.params=wins
comment20.target=void\ setWins(int)
comment21.params=
comment21.target=int\ getWins()
comment22.params=current
comment22.target=int\ siblingNumber(TreeNode)
comment23.params=current
comment23.target=boolean\ firstLevel(TreeNode)
comment24.params=
comment24.target=int\ getWinningAncestors()
comment25.params=treeNode\ level
comment25.target=void\ findWins(TreeNode,\ int)
comment25.text=\n\ 'level'\ must\ be\ set\ to\ 5,\ 6,\ 7,\ 8\ or\ 9.\n\ \n\ ALGORITHM\n\ (1)\ Check\ if\ the\ current\ node\ is\ on\ the\ correct\ level.\n\ (2)\ If\ it\ is,\ check\ if\ the\ current\ node\ is\ a\ winning\ node.\n
comment26.params=
comment26.target=boolean\ winning()
comment27.params=
comment27.target=void\ printValue()
comment28.params=treeNode
comment28.target=void\ printValuesOfAncestors(TreeNode)
comment3.params=root
comment3.target=void\ traverse(TreeNode)
comment4.params=child
comment4.target=char[]\ nextMove(TreeNode)
comment5.params=
comment5.target=int\ getLevel()
comment5.text=\n\ Using\ recursion\ to\ get\ level\ of\ tree.\n
comment6.params=
comment6.target=boolean\ isRoot()
comment6.text=\n\ Used\ to\ find\ level.\n
comment7.params=
comment7.target=TreeNode\ getPreviousSibling()
comment8.params=piece\ position
comment8.target=boolean\ makeMove(char,\ int)
comment9.params=
comment9.target=TreeNode\ getParent()
numComments=29
